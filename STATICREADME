
########################### To run the code #################################

command :-
python static.py directorypath

(Here Directory path is the total path.)


####################### Packages if not installed already ###################
pip install python-csv
pip install jsonlib
pip install pickle-mixin
pip install os-sys

###################### Work done For Static #################################
#The function featurefoo extracts the feature from a single file
#The features considered in feature extraction Phase were from DOS_Header
#Optional header , PE Section and API's 
#The API's are the top 400 API's extracted after applying tf-idf on all
#the present API's in the documents this gave me the modt relevant API's
#total thousands of API's which were called in the program. 
#Here Feature engineering is mainly the tf-idf part and finding the apt 
#subpart of sections which should be used as features.

#Here I considered it as a multiclass classification task 
#considered 4 classes to classify the data namely 
#1>Benign 
#2>packed Benign
#3>Malware
#4>packed Malware
#Trained the model on the give above 4 classes
#Then finally if the file classified as Benign malware, Benign it was 
#classified as Benign and if it was classified as Malware , Malware packed
#then it was classified as Malware.
#So using the above method i converted multiclass output into binary output.
#############################################################################

########################### References ######################################
1>https://www.geeksforgeeks.org/tf-idf-for-bigrams-trigrams/
2>https://www.sciencedirect.com/science/article/pii/S1319157817300149
3>https://datascience.stackexchange.com/questions/23666/how-many-features-to-sample-using-random-forests
#############################################################################